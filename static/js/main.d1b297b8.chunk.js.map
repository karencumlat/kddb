{"version":3,"sources":["helpers/date.js","helpers/api.js","helpers/useDramaFetch.js","helpers/navItems.js","helpers/genres.js","components/MobileMenu/index.js","components/Card/index.js","components/Feature/index.js","components/Menu/index.js","App.js","reportWebVitals.js","index.js"],"names":["day","delay","woGenre","URL_API","KD_API","API_KEY","current","Date","yr","getFullYear","mo","getMonth","dy","getDate","currDate","useDramaFetch","pageNumber","renderSection","useState","loading","setLoading","error","setError","dramas","setDramas","hasMore","setHasMore","API_URL","SEARCH","DISCOVER","LATEST","UPCOMING","WATCHING","WATCHED","useEffect","cancel","axios","method","url","cancelToken","CancelToken","c","then","res","prevDramas","Set","data","results","total_pages","page","console","log","catch","e","isCancel","navItems","name","title","icon","genres","id","label","MobileMenu","props","items","onClick","selectedItem","className","map","item","aria-label","value","Provider","size","Card","overview","poster_path","genre","React","onOverView","setOverview","src","JSON","stringify","includes","imagePath","alt","setTimeout","Feature","backdrop_path","first_air_date","style","backgroundImage","substring","Menu","App","setPageNumber","setRenderSection","observer","useRef","lastDramaRef","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","window","location","reload","target","drama","index","vote_average","genre_ids","filterGenre","g","filter","toString","replace","length","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1b297b8.chunk.js","sourcesContent":["const current = new Date();\r\nconst yr = current.getFullYear();\r\nconst mo = current.getMonth() + 1;\r\nconst dy = current.getDate();\r\n\r\nlet day;\r\nlet delay;\r\n\r\nif (dy < 10) {\r\n  day = `0${dy}`;\r\n} else {\r\n  day = dy;\r\n}\r\n\r\nif (mo === 1) {\r\n  delay = 12;\r\n} else {\r\n  delay = mo - 1;\r\n}\r\n\r\nexport const latestDate =\r\n  delay < 10 ? `${yr}-0${delay}-${day}` : `${yr}-${delay}-${day}`;\r\n\r\nexport const currDate = mo < 10 ? `${yr}-0${mo}-${day}` : `${yr}-${mo}-${day}`;\r\n","export const IMG_PATH = 'https://image.tmdb.org/t/p/';\r\n\r\nexport const woGenre = 'without_genres=16|99|10762|10763|10764|10767';\r\n\r\nexport const URL_API = 'https://api.themoviedb.org/3/';\r\n\r\nexport const KD_API = `${URL_API}discover/tv?with_original_language=ko`;\r\n\r\nexport const API_KEY = 'api_key=299cd45add63bfb2f4b534e2c123c7bb';\r\n\r\nexport const EN_US = `&language=en-US`;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { URL_API, KD_API, API_KEY, woGenre, EN_US } from './api';\r\nimport { currDate } from './date';\r\n\r\nfunction useDramaFetch(pageNumber, renderSection) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [dramas, setDramas] = useState([]);\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  const API_URL = {\r\n    SEARCH: `https://api.themoviedb.org/3/search/tv?${API_KEY}&${EN_US}&page=${pageNumber}&query=\"`,\r\n    DISCOVER: `${KD_API}&${API_KEY}&page=${pageNumber}&${woGenre}`,\r\n    LATEST: `${URL_API}tv/on_the_air?with_original_language=ko&${woGenre}&${API_KEY}&page=${pageNumber}`,\r\n    UPCOMING: `${KD_API}&${woGenre}&first_air_date.gte=${currDate}&sort_by=first_air_date.asc&${API_KEY}&page=${pageNumber}`,\r\n    WATCHING: `https://api.themoviedb.org/4/list/7069257?page=1&api_key=299cd45add63bfb2f4b534e2c123c7bb`,\r\n    WATCHED: `https://api.themoviedb.org/4/list/7069256?page=${pageNumber}&api_key=299cd45add63bfb2f4b534e2c123c7bb`,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDramas([]);\r\n  }, [renderSection]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    let cancel;\r\n\r\n    axios({\r\n      method: 'GET',\r\n      url: API_URL[renderSection],\r\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n    })\r\n      .then((res) => {\r\n        setDramas((prevDramas) => {\r\n          return [...new Set([...prevDramas, ...res.data.results])];\r\n        });\r\n        setHasMore(res.data.total_pages > res.data.page);\r\n        setLoading(false);\r\n        console.log(res.data);\r\n      })\r\n      .catch((e) => {\r\n        if (axios.isCancel(e)) return;\r\n        setError(true);\r\n      });\r\n    return () => cancel();\r\n  }, [pageNumber, renderSection]);\r\n  return { loading, error, dramas, hasMore };\r\n}\r\n\r\nexport default useDramaFetch;\r\n","import { GoBookmark } from 'react-icons/go';\r\nimport { IoMdHome, IoIosPlayCircle } from 'react-icons/io';\r\nimport { BsFillCollectionPlayFill, BsFillCollectionFill } from 'react-icons/bs';\r\n\r\nexport const navItems = [\r\n  {\r\n    name: 'DISCOVER',\r\n    title: 'All Shows',\r\n    icon: <IoMdHome />,\r\n  },\r\n  {\r\n    name: 'LATEST',\r\n    title: 'On Air',\r\n    icon: <IoIosPlayCircle />,\r\n  },\r\n  {\r\n    name: 'UPCOMING',\r\n    title: 'Upcoming',\r\n    icon: <GoBookmark />,\r\n  },\r\n  {\r\n    name: 'WATCHING',\r\n    title: 'Watching',\r\n    icon: <BsFillCollectionPlayFill />,\r\n  },\r\n  {\r\n    name: 'WATCHED',\r\n    title: 'Watched',\r\n    icon: <BsFillCollectionFill />,\r\n  },\r\n];\r\n","export const actionAdventure = '10759';\r\nexport const comedy = '35';\r\n\r\nexport const genres = [\r\n  {\r\n    id: 10759,\r\n    label: 'actionAdventure',\r\n    name: 'Action & Adventure',\r\n  },\r\n  {\r\n    id: 16,\r\n    label: 'anime',\r\n    name: 'Animation',\r\n  },\r\n  {\r\n    id: 35,\r\n    label: 'comedy',\r\n    name: 'Comedy',\r\n  },\r\n  {\r\n    id: 80,\r\n    label: 'crime',\r\n    name: 'Crime',\r\n  },\r\n  {\r\n    id: 99,\r\n    label: 'docu',\r\n    name: 'Documentary',\r\n  },\r\n  {\r\n    id: 18,\r\n    label: 'drama',\r\n    name: 'Drama',\r\n  },\r\n  {\r\n    id: 10751,\r\n    label: 'family',\r\n    name: 'Family',\r\n  },\r\n  {\r\n    id: 10762,\r\n    label: 'kids',\r\n    name: 'Kids',\r\n  },\r\n  {\r\n    id: 9648,\r\n    label: 'mystery',\r\n    name: 'Mystery',\r\n  },\r\n  {\r\n    id: 10763,\r\n    label: 'news',\r\n    name: 'News',\r\n  },\r\n  {\r\n    id: 10764,\r\n    label: 'reality',\r\n    name: 'Reality',\r\n  },\r\n  {\r\n    id: 10765,\r\n    label: 'fantasy',\r\n    name: 'Sci-Fi & Fantasy',\r\n  },\r\n  {\r\n    id: 10766,\r\n    label: 'soap',\r\n    name: 'Soap',\r\n  },\r\n  {\r\n    id: 10767,\r\n    label: 'talk',\r\n    name: 'Talk',\r\n  },\r\n  {\r\n    id: 10768,\r\n    label: 'politics',\r\n    name: 'War & Politics',\r\n  },\r\n  {\r\n    id: 37,\r\n    label: 'western',\r\n    name: 'Western',\r\n  },\r\n];\r\n","import { IconContext } from 'react-icons';\r\nimport './mobilemenu.css';\r\n\r\nfunction MobileMenu(props) {\r\n  const { items, onClick, selectedItem } = props;\r\n\r\n  return (\r\n    <div className=\"mobile-menu\">\r\n      {items.map((item) => {\r\n        return (\r\n          <button\r\n            aria-label={item.title}\r\n            onClick={onClick}\r\n            value={item.name}\r\n            className={item.name === selectedItem ? 'active' : ''}\r\n            key={item.name}\r\n          >\r\n            <IconContext.Provider\r\n              value={{ size: '1.25em', className: 'mobile-icon' }}\r\n            >\r\n              {item.icon}\r\n            </IconContext.Provider>\r\n            <span>{item.title}</span>\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileMenu;\r\n","import React from 'react';\r\nimport { IoIosCloseCircle } from 'react-icons/io';\r\nimport { IconContext } from 'react-icons';\r\n\r\nimport './card.css';\r\n\r\nimport { IMG_PATH } from '../../helpers/api';\r\n\r\nfunction Card(props) {\r\n  const { name, overview, poster_path, genre } = props;\r\n  const imagePath = IMG_PATH;\r\n  const imageSize = 'w500';\r\n\r\n  const [onOverView, setOverview] = React.useState(true);\r\n\r\n  return (\r\n    <div className=\"card\" key={name}>\r\n      <img\r\n        src={\r\n          JSON.stringify(poster_path).includes('null')\r\n            ? 'https://images.unsplash.com/photo-1540483761890-a1f7be05d99f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=645&q=80'\r\n            : imagePath + imageSize + poster_path\r\n        }\r\n        loading=\"lazy\"\r\n        alt={name}\r\n      />\r\n      <div className=\"card-info\">\r\n        <h3 title={name}>{name}</h3>\r\n        <small>{genre ? genre : <span>&nbsp;</span>}</small>\r\n      </div>\r\n      {onOverView === true ? (\r\n        <div className=\"overview\">\r\n          <IconContext.Provider\r\n            value={{ size: '2em', className: 'overview-close-btn' }}\r\n          >\r\n            <button\r\n              aria-label=\"Close\"\r\n              onClick={() => {\r\n                setOverview(!onOverView);\r\n                setTimeout(() => setOverview(true), 1000);\r\n              }}\r\n            >\r\n              <IoIosCloseCircle />\r\n            </button>\r\n          </IconContext.Provider>\r\n          <h3 title={name}>{name}</h3>\r\n          <small>{genre ? genre : ''}</small>\r\n          <p>{overview}</p>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport { IMG_PATH } from '../../helpers/api';\r\n\r\nimport './feature.css';\r\n\r\nfunction Feature(props) {\r\n  const { name, overview, genre, backdrop_path, first_air_date } = props;\r\n  const imagePath = IMG_PATH;\r\n  const imageSize = 'w1280';\r\n  return (\r\n    <div className=\"watching-container\">\r\n      <div\r\n        className=\"watching--backdrop\"\r\n        style={{\r\n          backgroundImage: `url(${imagePath + imageSize + backdrop_path})`,\r\n        }}\r\n      >\r\n        <div className=\"backdrop--info\">\r\n          <h3 className=\"backdrop--info-title\">{name}</h3>\r\n          <small className=\"backdrop--info-subtitle\">\r\n            {first_air_date.substring(0, 4)} • {genre}\r\n          </small>\r\n          <p className=\"backdrop--info-overview\">{overview}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"backdrop--info-mobile\">\r\n        <h3 className=\"backdrop--info-title\">{name}</h3>\r\n        <small className=\"backdrop--info-subtitle\">\r\n          {first_air_date.substring(0, 4)} • {genre}\r\n        </small>\r\n        <p className=\"backdrop--info-overview\">{overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feature;\r\n","import './menu.css';\r\n\r\nfunction Menu(props) {\r\n  const { items, onClick, selectedItem } = props;\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      {items.map((item) => {\r\n        return (\r\n          <button\r\n            onClick={onClick}\r\n            key={item.name}\r\n            value={item.name}\r\n            className={item.name === selectedItem ? 'active' : ''}\r\n          >\r\n            {item.title}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useState, useRef, useCallback } from 'react';\r\n\r\nimport useDramaFetch from './helpers/useDramaFetch';\r\nimport { navItems } from './helpers/navItems';\r\nimport { genres } from './helpers/genres';\r\nimport './App.css';\r\n\r\nimport MobileMenu from './components/MobileMenu';\r\nimport Card from './components/Card';\r\nimport Feature from './components/Feature';\r\nimport Menu from './components/Menu';\r\n\r\nexport default function App() {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [renderSection, setRenderSection] = React.useState('DISCOVER'); // Set which section to render, default `discover`\r\n\r\n  const { dramas, hasMore, loading, error } = useDramaFetch(\r\n    pageNumber,\r\n    renderSection\r\n  );\r\n\r\n  const observer = useRef();\r\n  const lastDramaRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore === true) {\r\n          setPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n        }\r\n      });\r\n\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasMore]\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/** Mobile Navigation*/}\r\n      <header className=\"app-header--mobile\">\r\n        <span className=\"app-header--mobile-nav\">\r\n          <h1 onClick={() => window.location.reload()}>KDDB</h1>\r\n        </span>\r\n        <MobileMenu\r\n          selectedItem={renderSection}\r\n          items={navItems}\r\n          onClick={(e) => {\r\n            setRenderSection(e.target.value);\r\n            setPageNumber(1);\r\n          }}\r\n        />\r\n        {/* <form id=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"search\"\r\n          className=\"search\"\r\n          placeholder=\"Search K-Drama...\"\r\n          onChange={searchDrama}\r\n        />\r\n      </form> */}\r\n      </header>\r\n      {/** Web Navigation*/}\r\n      <header className=\"app-header\">\r\n        <h1 onClick={() => window.location.reload()}>KDDB</h1>\r\n\r\n        <nav className=\"app-header--nav\">\r\n          <Menu\r\n            selectedItem={renderSection}\r\n            items={navItems}\r\n            onClick={(e) => {\r\n              setPageNumber(1);\r\n              setRenderSection(e.target.value);\r\n            }}\r\n          />\r\n        </nav>\r\n        {/* <form id=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"search\"\r\n          className=\"search\"\r\n          placeholder=\"Search K-Drama...\"\r\n          onChange={searchDrama}\r\n        />\r\n      </form> */}\r\n      </header>\r\n      <main id=\"main\" className=\"app-main\">\r\n        <h2>{renderSection}</h2>\r\n        <div className=\"card-group\">\r\n          {dramas.map((drama, index) => {\r\n            const {\r\n              name,\r\n              poster_path,\r\n              vote_average,\r\n              overview,\r\n              genre_ids,\r\n            } = drama;\r\n            const genre = genres.map((g) =>\r\n              genre_ids.includes(g.id) === true ? g.name : ''\r\n            );\r\n            const filterGenre = genre.filter((g) => g !== '');\r\n            if (renderSection === 'WATCHING') {\r\n              return (\r\n                <Feature\r\n                  key={name}\r\n                  name={name}\r\n                  overview={overview}\r\n                  genre={filterGenre\r\n                    .toString()\r\n                    .replace(/,/g, ' • ')\r\n                    .replace(/Action & Adventure/g, 'Action')}\r\n                  backdrop_path={drama.backdrop_path}\r\n                  first_air_date={drama.first_air_date}\r\n                />\r\n              );\r\n            }\r\n            if (dramas.length === index + 1) {\r\n              return (\r\n                <div\r\n                  className=\"card-group--content\"\r\n                  key={name}\r\n                  ref={lastDramaRef}\r\n                >\r\n                  <Card\r\n                    name={name}\r\n                    poster_path={poster_path}\r\n                    vote_average={vote_average}\r\n                    overview={overview}\r\n                    genre={filterGenre\r\n                      .toString()\r\n                      .replace(/,/g, ' • ')\r\n                      .replace(/Action & Adventure/g, 'Action')}\r\n                  />\r\n                </div>\r\n              );\r\n            } else {\r\n              return (\r\n                <div className=\"card-group--content\" key={name}>\r\n                  <Card\r\n                    name={name}\r\n                    poster_path={poster_path}\r\n                    vote_average={vote_average}\r\n                    overview={overview}\r\n                    genre={filterGenre\r\n                      .toString()\r\n                      .replace(/,/g, ' • ')\r\n                      .replace(/Action & Adventure/g, 'Action')}\r\n                  />\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n\r\n        <div>{loading === true ? 'Loading K-drama...' : ''}</div>\r\n        <div>{error && 'Error'}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}