{"version":3,"sources":["helpers/api.js","components/Card/index.js","components/NoResults/index.js","helpers/genres.js","components/CardGroup/index.js","components/Dropdown/index.js","components/Feature/index.js","components/Menu/index.js","components/Pagination/index.js","helpers/date.js","helpers/navItems.js","App.js","reportWebVitals.js","index.js"],"names":["woGenre","URL_API","KD_API","API_KEY","EN_US","Card","props","name","overview","poster_path","genre","className","src","JSON","stringify","includes","loading","alt","title","NoResults","onClick","window","location","reload","genres","id","label","CardGroup","drama","length","map","vote_average","genre_ids","filterGenre","g","filter","toString","replace","Dropdown","items","selectedValue","React","useState","toggleNav","setToggleNav","item","index","value","Feature","i","localStorage","getItem","isLoading","setLoading","info","setInfo","setCredits","a","Promise","all","fetch","then","res","json","data","forEach","d","catch","err","console","log","useEffect","loadInfo","Menu","selectedItem","Pagination","day","delay","page","totalPages","onClickPrev","onClickNext","current","Date","yr","getFullYear","mo","getMonth","dy","getDate","latestDate","currDate","navItems","App","setPage","setTotalPages","SEARCH_API","DISCOVER_API","LATEST_API","UPCOMING_API","WATCHED_API","renderSection","setRenderSection","searchTerm","setSearchTerm","searchResult","setSearchResult","discover","setDiscover","latest","setLatest","upcoming","setUpcoming","watched","setWatched","featID","setFeatID","loadSearch","loadResults","url","searchResults","results","result","original_language","total_pages","searchDrama","e","target","setItem","type","placeholder","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.038ed99e.chunk.js","sourcesContent":["export const IMG_PATH = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nexport const woGenre = 'without_genres=16|99|10762|10763|10764|10767';\r\n\r\nexport const URL_API = 'https://api.themoviedb.org/3/';\r\n\r\nexport const KD_API = `${URL_API}discover/tv?with_original_language=ko`;\r\n\r\nexport const API_KEY = 'api_key=299cd45add63bfb2f4b534e2c123c7bb';\r\n\r\nexport const EN_US = `&language=en-US`;\r\n","import './card.css';\r\n\r\nimport { IMG_PATH } from '../../helpers/api';\r\n\r\nfunction Card(props) {\r\n  const { name, overview, poster_path, genre } = props;\r\n  const imagePath = IMG_PATH;\r\n  return (\r\n    <div className=\"card\" key={name}>\r\n      <img\r\n        src={\r\n          JSON.stringify(poster_path).includes('null')\r\n            ? 'https://images.unsplash.com/photo-1540483761890-a1f7be05d99f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=645&q=80'\r\n            : imagePath + poster_path\r\n        }\r\n        loading=\"lazy\"\r\n        alt={name}\r\n      />\r\n      <div className=\"card-info\">\r\n        <h3 title={name}>{name}</h3>\r\n        <small>{genre ? genre : <span>&nbsp;</span>}</small>\r\n      </div>\r\n      <div className=\"overview\">\r\n        <h3 title={name}>{name}</h3>\r\n        <small>{genre ? genre : ''}</small>\r\n        <h4>Overview</h4>\r\n        {overview}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { IoIosFilm } from 'react-icons/io';\r\n\r\nimport './noresults.css';\r\n\r\nfunction NoResults() {\r\n  return (\r\n    <div className=\"container--no-results\">\r\n      <i className=\"fc-film-reel\">\r\n        <IoIosFilm className=\"spin\" />\r\n      </i>\r\n      <h2>No Results Found</h2>\r\n      <small>\r\n        We could not find what you are looking for. <br />\r\n        Please try again or discover new KDramas from our full list.\r\n      </small>\r\n      <button\r\n        onClick={() => window.location.reload()}\r\n        className=\"no-results--btn\"\r\n      >\r\n        Discover K-Dramas\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoResults;\r\n","export const actionAdventure = '10759';\r\nexport const comedy = '35';\r\n\r\nexport const genres = [\r\n  {\r\n    id: 10759,\r\n    label: 'actionAdventure',\r\n    name: 'Action & Adventure',\r\n  },\r\n  {\r\n    id: 16,\r\n    label: 'anime',\r\n    name: 'Animation',\r\n  },\r\n  {\r\n    id: 35,\r\n    label: 'comedy',\r\n    name: 'Comedy',\r\n  },\r\n  {\r\n    id: 80,\r\n    label: 'crime',\r\n    name: 'Crime',\r\n  },\r\n  {\r\n    id: 99,\r\n    label: 'docu',\r\n    name: 'Documentary',\r\n  },\r\n  {\r\n    id: 18,\r\n    label: 'drama',\r\n    name: 'Drama',\r\n  },\r\n  {\r\n    id: 10751,\r\n    label: 'family',\r\n    name: 'Family',\r\n  },\r\n  {\r\n    id: 10762,\r\n    label: 'kids',\r\n    name: 'Kids',\r\n  },\r\n  {\r\n    id: 9648,\r\n    label: 'mystery',\r\n    name: 'Mystery',\r\n  },\r\n  {\r\n    id: 10763,\r\n    label: 'news',\r\n    name: 'News',\r\n  },\r\n  {\r\n    id: 10764,\r\n    label: 'reality',\r\n    name: 'Reality',\r\n  },\r\n  {\r\n    id: 10765,\r\n    label: 'fantasy',\r\n    name: 'Sci-Fi & Fantasy',\r\n  },\r\n  {\r\n    id: 10766,\r\n    label: 'soap',\r\n    name: 'Soap',\r\n  },\r\n  {\r\n    id: 10767,\r\n    label: 'talk',\r\n    name: 'Talk',\r\n  },\r\n  {\r\n    id: 10768,\r\n    label: 'politics',\r\n    name: 'War & Politics',\r\n  },\r\n  {\r\n    id: 37,\r\n    label: 'western',\r\n    name: 'Western',\r\n  },\r\n];\r\n","import Card from '../Card';\r\nimport NoResults from '../NoResults';\r\n\r\nimport { genres } from '../../helpers/genres';\r\n\r\nimport './cardgroup.css';\r\n\r\nfunction CardGroup(props) {\r\n  const { drama, title } = props;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{title}</h2>\r\n      <div className=\"card-group\">\r\n        {drama == null ? (\r\n          'loading k-drama...'\r\n        ) : drama.length === 0 ? (\r\n          <NoResults />\r\n        ) : (\r\n          drama.map((drama) => {\r\n            const {\r\n              name,\r\n              poster_path,\r\n              vote_average,\r\n              overview,\r\n              genre_ids,\r\n            } = drama;\r\n            const genre = genres.map((g) =>\r\n              genre_ids.includes(g.id) === true ? g.name : ''\r\n            );\r\n            const filterGenre = genre.filter((g) => g !== '');\r\n\r\n            return (\r\n              <div className=\"card-group--content\" key={name}>\r\n                <Card\r\n                  name={name}\r\n                  poster_path={poster_path}\r\n                  vote_average={vote_average}\r\n                  overview={overview}\r\n                  genre={filterGenre\r\n                    .toString()\r\n                    .replace(/,/g, ' • ')\r\n                    .replace(/Action & Adventure/g, 'Action')}\r\n                />\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardGroup;\r\n","import React from 'react';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\r\n\r\nimport './dropdown.css';\r\n\r\nfunction Dropdown(props) {\r\n  const { items, onClick, selectedValue } = props;\r\n\r\n  const [toggleNav, setToggleNav] = React.useState(false);\r\n\r\n  const handleToggle = () => setToggleNav(!toggleNav);\r\n\r\n  return (\r\n    <>\r\n      <button className=\"trigger-button\" onClick={handleToggle}>\r\n        <span>\r\n          {items.map((item) => (item.name === selectedValue ? item.title : ''))}\r\n        </span>{' '}\r\n        <span>{toggleNav ? <IoIosArrowUp /> : <IoIosArrowDown />}</span>\r\n      </button>\r\n      {toggleNav ? (\r\n        <div className=\"dropdown-menu\">\r\n          {items.map((item, index) => {\r\n            return (\r\n              <button\r\n                key={item.name}\r\n                onClick={onClick}\r\n                value={item.name}\r\n                className={\r\n                  item.name === selectedValue\r\n                    ? 'dropdown-menu--item active'\r\n                    : 'dropdown-menu--item'\r\n                }\r\n              >\r\n                {item.title}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import React from 'react';\r\nimport NoResults from '../NoResults';\r\n\r\nimport { URL_API, API_KEY, EN_US } from '../../helpers/api';\r\n\r\nimport './feature.css';\r\n\r\nfunction Feature(props) {\r\n  const i = localStorage.getItem('featID');\r\n\r\n  const [isLoading, setLoading] = React.useState(true);\r\n  const { title, id } = props;\r\n  const [info, setInfo] = React.useState();\r\n  const [credits, setCredits] = React.useState();\r\n\r\n  // const FEAT_API = `${URL_API}tv/${i}?${API_KEY}${EN_US}`;\r\n  // const CAST_API = `${URL_API}tv/${i}/credits?${API_KEY}${EN_US}`;\r\n\r\n  React.useEffect(() => {\r\n    loadInfo();\r\n  }, [i]);\r\n\r\n  async function loadInfo() {\r\n    Promise.all([\r\n      fetch(`${URL_API}tv/${i}?${API_KEY}${EN_US}`),\r\n      fetch(`${URL_API}tv/${i}/credits?${API_KEY}${EN_US}`),\r\n    ])\r\n      .then(function (res) {\r\n        return Promise.all(\r\n          res.map(function (res) {\r\n            return res.json();\r\n          })\r\n        );\r\n      })\r\n      .then(function (data) {\r\n        data.forEach((d, index) => {\r\n          if (index === 0) {\r\n            setInfo(d);\r\n          } else {\r\n            setCredits(d);\r\n          }\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  function render() {\r\n    if (info !== null) {\r\n      console.log(info.name);\r\n    } else {\r\n      <NoResults />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {render()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feature;\r\n","import './menu.css';\r\n\r\nfunction Menu(props) {\r\n  const { items, onClick, selectedItem } = props;\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      {items.map((item) => {\r\n        return (\r\n          <button\r\n            onClick={onClick}\r\n            key={item.name}\r\n            value={item.name}\r\n            className={item.name === selectedItem ? 'active' : ''}\r\n          >\r\n            {item.title}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import { IoMdArrowDropleft, IoMdArrowDropright } from 'react-icons/io';\r\n\r\nimport './pagination.css';\r\n\r\nfunction Pagination(props) {\r\n  const { page, totalPages, onClickPrev, onClickNext } = props;\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <span className=\"pagination-number\">\r\n        {page} of {totalPages} pages\r\n      </span>\r\n      <span className=\"divider\"></span>\r\n      <button className=\"pagination-previous\" onClick={onClickPrev}>\r\n        <IoMdArrowDropleft />\r\n      </button>\r\n      <span className=\"divider\"></span>\r\n      <button className=\"pagination-next\" onClick={onClickNext}>\r\n        <IoMdArrowDropright />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","const current = new Date();\r\nconst yr = current.getFullYear();\r\nconst mo = current.getMonth() + 1;\r\nconst dy = current.getDate();\r\n\r\nlet day;\r\nlet delay;\r\n\r\nif (dy < 10) {\r\n  day = `0${dy}`;\r\n} else {\r\n  day = dy;\r\n}\r\n\r\nif (mo === 1) {\r\n  delay = 12;\r\n} else {\r\n  delay = mo - 1;\r\n}\r\n\r\nexport const latestDate =\r\n  delay < 10 ? `${yr}-0${delay}-${day}` : `${yr}-${delay}-${day}`;\r\n\r\nexport const currDate = mo < 10 ? `${yr}-0${mo}-${day}` : `${yr}-${mo}-${day}`;\r\n","export const navItems = [\r\n  {\r\n    name: 'discover',\r\n    title: 'Discover',\r\n  },\r\n  {\r\n    name: 'latest',\r\n    title: 'New Releases',\r\n  },\r\n  {\r\n    name: 'upcoming',\r\n    title: 'Upcoming',\r\n  },\r\n  {\r\n    name: 'watching',\r\n    title: 'Watching',\r\n  },\r\n  {\r\n    name: 'watched',\r\n    title: 'Watched',\r\n  },\r\n];\r\n","import React from 'react';\n\nimport CardGroup from './components/CardGroup';\nimport Dropdown from './components/Dropdown';\nimport Feature from './components/Feature';\nimport Menu from './components/Menu';\nimport Pagination from './components/Pagination';\n\nimport { KD_API, API_KEY, woGenre } from './helpers/api';\nimport { latestDate, currDate } from './helpers/date';\nimport { navItems } from './helpers/navItems';\n\nimport './App.css';\n\nfunction App() {\n  const [isLoading, setLoading] = React.useState(true);\n  const [page, setPage] = React.useState(1);\n  const [totalPages, setTotalPages] = React.useState(1);\n\n  const SEARCH_API = `https://api.themoviedb.org/3/search/tv?${API_KEY}&query=\"`;\n  const DISCOVER_API = `${KD_API}&${API_KEY}&page=${page}&${woGenre}`;\n  const LATEST_API = `${KD_API}&${woGenre}&first_air_date.gte=${latestDate}&first_air_date.lte=${currDate}&sort_by=first_air_date.desc&${API_KEY}&page=${page}`;\n  const UPCOMING_API = `${KD_API}&${woGenre}&first_air_date.gte=${currDate}&sort_by=first_air_date.asc&${API_KEY}`;\n  const WATCHING_API = `https://api.themoviedb.org/4/list/7069257?page=1&api_key=299cd45add63bfb2f4b534e2c123c7bb`;\n  const WATCHED_API = `https://api.themoviedb.org/4/list/7069256?page=${page}&api_key=299cd45add63bfb2f4b534e2c123c7bb`;\n\n  // Set which section to render, default `discover`\n  const [renderSection, setRenderSection] = React.useState('discover');\n\n  //TODO: Fix searching without typing exact title\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState();\n\n  //Data from API\n  const [discover, setDiscover] = React.useState();\n  const [latest, setLatest] = React.useState();\n  const [upcoming, setUpcoming] = React.useState();\n  const [watching, setWatching] = React.useState();\n  const [watched, setWatched] = React.useState();\n\n  const [featID, setFeatID] = React.useState();\n\n  React.useEffect(() => {\n    // Loads URL to fetch data from API\n    if (searchTerm) loadSearch(SEARCH_API + searchTerm);\n    renderSection === 'latest'\n      ? loadResults(LATEST_API)\n      : renderSection === 'upcoming'\n      ? loadResults(UPCOMING_API)\n      : renderSection === 'watched'\n      ? loadResults(WATCHED_API)\n      : renderSection === 'watching'\n      ? loadResults(WATCHING_API)\n      : loadResults(DISCOVER_API);\n  }, [searchTerm, page, renderSection]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  async function loadSearch(url) {\n    const res = await fetch(url);\n    const data = await res.json();\n    const searchResults = data.results.filter(\n      (result) => result.original_language === 'ko'\n    );\n\n    setSearchResult(searchResults);\n    setLoading(false);\n  }\n\n  // Fetch API data\n  async function loadResults(url) {\n    const res = await fetch(url);\n    const data = await res.json();\n\n    setTotalPages(data.total_pages);\n\n    renderSection === 'latest'\n      ? setLatest(data.results)\n      : renderSection === 'upcoming'\n      ? setUpcoming(data.results)\n      : renderSection === 'watched'\n      ? setWatched(data.results)\n      : renderSection === 'watching'\n      ? setFeatID(data.results[0].id)\n      : setDiscover(data.results);\n\n    setLoading(false);\n  }\n\n  function searchDrama(e) {\n    setSearchTerm(e.target.value);\n  }\n\n  function renderPagination() {\n    return totalPages > 1 ? (\n      <section className=\"section-pagination\">\n        <Pagination\n          page={page}\n          totalPages={totalPages}\n          onClickPrev={() => (page === 1 ? setPage(1) : setPage(page - 1))}\n          onClickNext={() =>\n            page === totalPages ? setPage(page) : setPage(page + 1)\n          }\n        />\n      </section>\n    ) : (\n      ''\n    );\n  }\n\n  if (featID) {\n    localStorage.setItem('featID', featID);\n  }\n\n  return (\n    <div className=\"app\">\n      {/** Mobile Navigation*/}\n      <header className=\"app-header--mobile\">\n        <span className=\"app-header--mobile-nav\">\n          <h1 onClick={() => window.location.reload()}>KDDB</h1>\n          <nav className=\"\">\n            <Dropdown\n              items={navItems}\n              onClick={(e) => {\n                setPage(1);\n                setRenderSection(e.target.value);\n              }}\n              selectedValue={renderSection}\n            />\n          </nav>\n        </span>\n        <form id=\"form\">\n          <input\n            type=\"text\"\n            id=\"search\"\n            className=\"search\"\n            placeholder=\"Search K-Drama...\"\n            onChange={searchDrama}\n          />\n        </form>\n      </header>\n      {/** Web Navigation*/}\n      <header className=\"app-header\">\n        <h1 onClick={() => window.location.reload()}>KDDB</h1>\n\n        <nav className=\"app-header--nav\">\n          <Menu\n            selectedItem={renderSection}\n            items={navItems}\n            onClick={(e) => {\n              setPage(1);\n              setRenderSection(e.target.value);\n            }}\n          />\n        </nav>\n        <form id=\"form\">\n          <input\n            type=\"text\"\n            id=\"search\"\n            className=\"search\"\n            placeholder=\"Search K-Drama...\"\n            onChange={searchDrama}\n          />\n        </form>\n      </header>\n\n      <main id=\"main\" className=\"app-main\">\n        {searchTerm ? (\n          <CardGroup drama={searchResult} title=\"Search Result\" />\n        ) : renderSection === 'upcoming' ? (\n          <CardGroup drama={upcoming} title=\"Coming Soon\" />\n        ) : renderSection === 'watched' ? (\n          <CardGroup drama={watched} title=\"Watched\" />\n        ) : renderSection === 'watching' ? (\n          <Feature id={featID} title=\"Watching\" />\n        ) : renderSection === 'latest' ? (\n          <CardGroup drama={latest} title=\"New Releases\" />\n        ) : (\n          <CardGroup drama={discover} title=\"Discover\" />\n        )}\n      </main>\n      {renderPagination()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}